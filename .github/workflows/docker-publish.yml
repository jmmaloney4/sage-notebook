name: Docker

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
  schedule:
    - cron: "0 0 * * *"

env:
  IMAGE_NAME: sage-notebook

jobs:
  push:
    strategy:
      fail-fast: false
      matrix:
        SAGE_VERSION:
        - "9.0"
        - "9.1"
        - "9.2"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Login to ghcr.io
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      
      - name: Generate Date-Time
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y%m%d%H%M')"
      
      - name: Prep Docker Tags
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: "docker.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}, ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
          tag-sha: true
          tag-custom: "${{ matrix.SAGE_VERSION }}, ${{ steps.datetime.outputs.datetime }}"
        
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          build-args: "SAGE_VERSION=${{  matrix.SAGE_VERSION }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
